version: "3"
services:
  web:
    environment: 
      - SYSTEM_TOKEN=${SYSTEM_TOKEN}
      - USER_TOKEN=${USER_TOKEN}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - INTERNAL_API_PORT=${INTERNAL_API_PORT}
    ports:
      - ${PUBLIC_WEB_PORT}:${INTERNAL_API_PORT}
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis
  worker:
    environment: 
      - GENEA_SERVER=${GENEA_SERVER}
      - SYSTEM_TOKEN=${SYSTEM_TOKEN}
      - API_SERVER=http://web:${INTERNAL_API_PORT}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - RENDER_RESOLUTION_X=${RENDER_RESOLUTION_X}
      - RENDER_RESOLUTION_Y=${RENDER_RESOLUTION_Y}
      - RENDER_FPS=${RENDER_FPS}
      - MAX_NUMBER_FRAMES=${MAX_NUMBER_FRAMES}
      - RENDER_DURATION_FRAMES=${RENDER_DURATION_FRAMES}
      - WORKER_TIMEOUT=${WORKER_TIMEOUT}
    build:
      context: celery-queue
      dockerfile: Dockerfile
    depends_on:
      - redis
  monitor:
    environment: 
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - WORKER_TIMEOUT=${WORKER_TIMEOUT}
    build:
      context: celery-queue
      dockerfile: Dockerfile
    ports:
      - ${PUBLIC_MONITOR_PORT}:${INTERNAL_MONITOR_PORT}
    entrypoint: flower
    command: -A tasks --port=${INTERNAL_MONITOR_PORT} --broker=${CELERY_BROKER_URL} --basic_auth=${FLOWER_USER}:${FLOWER_PWD}
    depends_on:
      - redis
  redis:
    image: redis